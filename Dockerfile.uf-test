#!/bin/bash
set -euo pipefail

SPLUNK_HOME=/opt/splunkforwarder
SPLUNK_BIN=$SPLUNK_HOME/bin/splunk
SPLUNK_USER=admin
SPLUNK_PASS=${SPLUNK_PASS:-changeme123}
FORWARDER_TARGET=${FORWARDER_TARGET:-splunk:9997}

# Start rsyslog (so /var/log/auth.log and /var/log/syslog are populated)
if command -v rsyslogd >/dev/null 2>&1; then
  echo "[i] Starting rsyslogd..."
  /usr/sbin/rsyslogd
else
  echo "[!] rsyslogd not found"
fi

# Start sshd
if [ -f /usr/sbin/sshd ]; then
  echo "[i] Starting sshd..."
  /usr/sbin/sshd
fi

# First-time splunk UF seed password and initial start
if [ ! -f "$SPLUNK_HOME/etc/passwd" ]; then
  echo "[i] First-run: starting splunk to create admin user..."
  $SPLUNK_BIN start --accept-license --answer-yes --no-prompt --seed-passwd "$SPLUNK_PASS"
  $SPLUNK_BIN stop
fi

# Start splunk forwarder
echo "[i] Starting Splunk UF..."
$SPLUNK_BIN start --accept-license --answer-yes --no-prompt || true

# Login (ensure commands authenticated)
$SPLUNK_BIN login -auth "${SPLUNK_USER}:${SPLUNK_PASS}" || true

# Configure forward-server (idempotent)
$SPLUNK_BIN add forward-server "${FORWARDER_TARGET}" -auth "${SPLUNK_USER}:${SPLUNK_PASS}" || true

# Add monitors if not already present
$SPLUNK_BIN list monitor | grep '/var/log/auth.log' || $SPLUNK_BIN add monitor /var/log/auth.log -sourcetype linux_auth -index main -auth "${SPLUNK_USER}:${SPLUNK_PASS}"
$SPLUNK_BIN list monitor | grep '/var/log/syslog' || $SPLUNK_BIN add monitor /var/log/syslog -sourcetype syslog -index main -auth "${SPLUNK_USER}:${SPLUNK_PASS}"

# show status
$SPLUNK_BIN list forward-server -auth "${SPLUNK_USER}:${SPLUNK_PASS}"
$SPLUNK_BIN list monitor -auth "${SPLUNK_USER}:${SPLUNK_PASS}"

# Keep container alive with a shell
exec /bin/bash
